class PostPage { static clearForm() { const submitElement = document.getElementById("extSubmit"); const urlElement = document.getElementById("extUrl"); const forumElement = document.getElementById("extForum"); urlElement.value = ""; forumElement.value = ""; submitElement.value = "Submit Post"; MainSection.clearBlock("main-contain"); } static populateForumSelect(selectId) { const sel = document.getElementById(selectId); for (const [feed, forums] of Object.entries(Feed.schema)){ if (feed === "Home") { continue; } const option = document.createElement("option"); option.value = feed; option.text = feed; option.setAttribute("style", "font-weight: bold; font-size: 1.2em;"); sel.add(option); for(let i = 0; i < forums.length; i++){ const option1 = document.createElement("option"); option1.value = forums[i]; option1.text = ` - ${forums[i]}`; sel.add(option1); } } } static dragPrep(e) { e.preventDefault(); e.stopPropagation(); return document.getElementById('dropArea'); } static dragEnter(e) { PostPage.dragPrep(e).classList.add('highlight'); } static dragLeave(e) { PostPage.dragPrep(e).classList.remove('highlight'); } static dragOver(e) { PostPage.dragPrep(e).classList.add('highlight'); } static drop(e) { const area = PostPage.dragPrep(e); area.classList.remove('highlight'); const dt = e.dataTransfer; if (!dt) { return; } const files = dt.files; PostPage.handleFiles(files); } static handleFiles(files) { for (const [_k, file] of Object.entries(files)){ PostPage.uploadFile(file); PostPage.previewFile(file); } } static uploadFile(file) { console.log("TRYING TO UPLOAD... MUST COMPLETE FUNCTION..."); const url = 'YOUR URL HERE'; const form = new FormData(); form.set('file', file); } static previewFile(file) { const reader = new FileReader(); reader.readAsDataURL(file); reader.onloadend = function() { const img = document.createElement('img'); img.src = reader.result; const gal = document.getElementById("gallery"); Dom.setElement(gal, img); }; } static initialize() { PostPage.populateForumSelect("extForum"); PostPage.populateForumSelect("intForum"); const extUrl = document.getElementById("extUrl"); const extSubmit = document.getElementById("extSubmit"); const intSubmit = document.getElementById("intSubmit"); extUrl.addEventListener("click", ()=>{ extUrl.value = ""; }); extUrl.addEventListener("paste", ()=>{ setTimeout(function() { const elUrl = document.getElementById("extUrl"); const urlInfo = new URL(elUrl.value); try { if (urlInfo.pathname !== "/") { OpenGraph.fetchData(elUrl.value); } } catch { console.error("Unable to make a URL.", elUrl.value); } }, 10); }); extSubmit.addEventListener("click", async ()=>{ const submitElement = extSubmit; if (submitElement.value !== "Submit Post") { return; } const urlElement = document.getElementById("extUrl"); const forumElement = document.getElementById("extForum"); Alerts.error(!urlElement.value, "Must provide a URL.", true); Alerts.error(!forumElement.value, "Must select a forum to post to."); if (OpenGraph.postData) { Alerts.error(!OpenGraph.postData.title, "The URL provided did not return a valid title."); Alerts.error(!OpenGraph.postData.origImg, "The URL provided did not return a valid image."); if (OpenGraph.postData.origImg && (!OpenGraph.postData.w || !OpenGraph.postData.h)) { Alerts.error(true, "Error: The system failed to identify image width and height."); } } else { if (urlElement.value) { Alerts.error(true, "The URL provided has not returned valid OpenGraph data. You may need a Custom Post."); } } if (Alerts.hasAlerts()) { Alerts.displayAlerts(); return; } OpenGraph.postData.forum = forumElement.value; submitElement.value = "Submitting..."; const json = await API.callAPI("/post", OpenGraph.postData); Alerts.error(!json, "Error: Post submission response was empty or invalid.", true); if (Alerts.hasAlerts()) { Alerts.displayAlerts(); return; } PostPage.clearForm(); console.log(json); }); intSubmit.addEventListener("click", async ()=>{ const submitElement = intSubmit; if (submitElement.value !== "Submit Post") { return; } const elTitle = document.getElementById("intTitle"); const elContent = document.getElementById("intContent"); const elForum = document.getElementById("intForum"); Alerts.error(!elTitle.value, "Must provide a title.", true); Alerts.error(elTitle.value.length > 120, "Title cannot exceed 120 characters."); Alerts.error(elContent.value.length > 250, "Summary cannot exceed 250 characters."); Alerts.error(!elForum.value, "Must select a forum to post to."); if (Alerts.hasAlerts()) { Alerts.displayAlerts(); return; } if (!Forum.schema || !Forum.schema[elForum.value]) { alert("Error: The forum selected is considered invalid."); return; } submitElement.value = "Submitting..."; const json = await API.callAPI("/post", OpenGraph.postData); Alerts.error(!json, "Error: Post submission response was empty or invalid.", true); if (Alerts.hasAlerts()) { Alerts.displayAlerts(); return; } PostPage.clearForm(); console.log(json); }); let dropArea = document.getElementById('dropArea'); dropArea.addEventListener('dragenter', (e)=>PostPage.dragEnter(e) , false); dropArea.addEventListener('dragleave', (e)=>PostPage.dragLeave(e) , false); dropArea.addEventListener('dragover', (e)=>PostPage.dragOver(e) , false); dropArea.addEventListener('drop', (e)=>PostPage.drop(e) , false); } } Script.register("PostPage", PostPage.initialize);